apiVersion: apps/v1
kind: Deployment
metadata:
  name: resilient-app
  labels:
    app: resilient-app
spec:
  replicas: 4  # Plus de replicas pour tester la r√©partition
  selector:
    matchLabels:
      app: resilient-app
  template:
    metadata:
      labels:
        app: resilient-app
  spec:
      # Configuration des Topology Spread Constraints
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app: resilient-app
      - maxSkew: 1
        topologyKey: kubernetes.io/os
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app: resilient-app
      containers:
      - name: web-server
        image: nginx:1.21
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        # Configuration pour la surveillance
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: resilient-app-service
spec:
  selector:
    app: resilient-app
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: ClusterIP